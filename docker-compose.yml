# ü™Ç 1BIP - Forces Arm√©es Royales Marocaines - Troupes A√©roport√©es
# 1√®re Brigade d'Infanterie Parachutiste
# Syst√®me de Reconnaissance Faciale et Contr√¥le d'Acc√®s
# Configuration Docker Compose

volumes:
  postgres-data:

services:
  compreface-postgres-db:
    image: ${registry}compreface-postgres-db:${POSTGRES_VERSION}
    restart: always
    container_name: "compreface-postgres-db"
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_DB=${postgres_db}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  compreface-admin:
    restart: always
    image: ${registry}compreface-admin:${ADMIN_VERSION}
    container_name: "compreface-admin"
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_URL=jdbc:postgresql://${postgres_domain}:${postgres_port}/${postgres_db}
      - SPRING_PROFILES_ACTIVE=dev
      - ENABLE_EMAIL_SERVER=${enable_email_server}
      - EMAIL_HOST=${email_host}
      - EMAIL_USERNAME=${email_username}
      - EMAIL_FROM=${email_from}
      - EMAIL_PASSWORD=${email_password}
      - ADMIN_JAVA_OPTS=${compreface_admin_java_options}
      - MAX_FILE_SIZE=${max_file_size}
      - MAX_REQUEST_SIZE=${max_request_size}B
    depends_on:
      - compreface-postgres-db
      - compreface-api

  compreface-api:
    restart: always
    image: ${registry}compreface-api:${API_VERSION}
    container_name: "compreface-api"
    depends_on:
      - compreface-postgres-db
    environment:
      - POSTGRES_USER=${postgres_username}
      - POSTGRES_PASSWORD=${postgres_password}
      - POSTGRES_URL=jdbc:postgresql://${postgres_domain}:${postgres_port}/${postgres_db}
      - SPRING_PROFILES_ACTIVE=dev
      - API_JAVA_OPTS=${compreface_api_java_options}
      - SAVE_IMAGES_TO_DB=${save_images_to_db}
      - MAX_FILE_SIZE=${max_file_size}
      - MAX_REQUEST_SIZE=${max_request_size}B
      - CONNECTION_TIMEOUT=${connection_timeout:-10000}
      - READ_TIMEOUT=${read_timeout:-60000}

  compreface-fe:
    restart: always
    image: ${registry}compreface-fe:${FE_VERSION}
    container_name: "compreface-ui"
    ports:
      - "8000:80"
    depends_on:
      - compreface-api
      - compreface-admin
    environment:
      - CLIENT_MAX_BODY_SIZE=${max_request_size}
      - PROXY_READ_TIMEOUT=${read_timeout:-60000}ms
      - PROXY_CONNECT_TIMEOUT=${connection_timeout:-10000}ms

  compreface-core:
    restart: always
    image: ${registry}compreface-core:${CORE_VERSION}
    container_name: "compreface-core"
    environment:
      - ML_PORT=3000
      - IMG_LENGTH_LIMIT=${max_detect_size}
      - UWSGI_PROCESSES=${uwsgi_processes:-1}
      - UWSGI_THREADS=${uwsgi_threads:-2}
      - PYTHONUNBUFFERED=1
      - PYTHONVERBOSE=1
    # Healthcheck d√©sactiv√© temporairement pour debugging M3 Max
    # healthcheck:
    #   test: curl --fail http://localhost:3000/healthcheck || exit 1
    #   interval: 30s
    #   retries: 10
    #   start_period: 300s  # 5 minutes pour M3 Max ARM64 √©mulation
    #   timeout: 15s

  # 1BIP Camera Integration Service
  # Hikvision camera integration for face recognition and access control
  camera-service:
    build:
      context: ./camera-service
      dockerfile: Dockerfile
    container_name: "1bip-camera-service"
    restart: unless-stopped
    depends_on:
      - compreface-api
      - compreface-postgres-db
    env_file:
      - ./camera-service/config/camera_config.env
    volumes:
      - ./camera-service/logs:/app/logs
    networks:
      - default
    # Uncomment if you need to access camera service from host
    # ports:
    #   - "5001:5000"

  # 1BIP Dashboard Service
  # Real-time monitoring interface for access control and attendance
  dashboard-service:
    build:
      context: ./dashboard-service
      dockerfile: Dockerfile
    container_name: "1bip-dashboard"
    restart: unless-stopped
    depends_on:
      - compreface-postgres-db
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=compreface-postgres-db
      - DB_PORT=5432
      - DB_NAME=${postgres_db}
      - DB_USER=${postgres_username}
      - DB_PASSWORD=${postgres_password}
      - DASHBOARD_PORT=5000
      - FLASK_DEBUG=false
    networks:
      - default
